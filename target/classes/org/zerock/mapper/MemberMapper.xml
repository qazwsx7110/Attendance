<?xml version="1.0" encoding="UTF-8"  ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.zerock.mapper.MemberMapper">

<resultMap type="org.zerock.vo.MemberVO" id="memberMap">
<id property="userId" column="user_Id"/>
<result property="userId" column="user_Id"/>
<result property="userPw" column="user_Pw"/>
<result property="userName" column="user_Name"/>
<result property="regDate" column="reg_Date"/>
<result property="updateDate" column="update_Date"/>
<result property="grade" column="grade"/>
<result property="code" column="code"/>
<collection property="authList" resultMap="authMap">
</collection>
</resultMap>

<resultMap type="org.zerock.vo.AuthVO" id="authMap">
<result property="userId" column="user_Id"/>
<result property="auth" column="auth"/>
</resultMap>

<select id="read" resultMap="memberMap">
SELECT 
mem.user_id,user_pw,user_name,enabled,reg_date,auth,code,grade
FROM
member mem LEFT OUTER JOIN authentication auth on mem.user_id=auth.user_id
WHERE mem.user_id = #{userid}
</select>

<insert id="insertMember">
    INSERT INTO 
    member(user_id,user_pw,user_name,reg_date,enabled,code,grade)
    VALUES
    (#{userId},#{userPw},#{userName},sysdate,1,#{code},#{grade})
</insert>

<insert id="insertAuthadmin">
    INSERT INTO 
    authentication(user_id,auth)
    VALUES
    (#{userId},'ROLE_ADMIN')
</insert>

<insert id="insertAuthmember">
    INSERT INTO 
    authentication(user_id,auth)
    VALUES
    (#{userId},'ROLE_MEMBER')
</insert>

<insert id="insertApprovalNumber">
    INSERT INTO 
    sequenceapprovalnumber(approval_no,code)
    VALUES
    (1,#{code})
</insert>


<select id="ckeckCode" resultType="int">
  SELECT  
  COUNT(*) 
  FROM
  member
  WHERE code = #{code}
</select>

<select id="ckeckId" resultType="int">
  SELECT 
  COUNT(*) 
  FROM
   member 
   WHERE user_id = #{id}
</select>

<select id="getGrade" resultType="org.zerock.vo.GradeVO">
  SELECT 
  grade_name,rank 
  FROM
  grade 
</select>

<select id="getMemberListTotalCount" resultType="int">
  SELECT 
  count(*) 
  FROM 
  member 
  WHERE
  code =#{code} 
</select>

<select id="getMemberList" resultType="org.zerock.vo.MemberVO">
   
   SELECT 
  user_id,user_name,reg_date,code,grade
  FROM
  (
    SELECT 
    rownum rn,user_id,user_name,reg_date,code,grade
    FROM
      (
      SELECT 
      user_id,user_name,reg_date,code,grade
      FROM
      member
      ORDER BY reg_date DESC      
      )
    WHERE
    code =#{code}     
    <if test="name != null and !name.equals('')">
    AND user_name like '%'||#{name}||'%'
    </if>        
    <if test="grade !=null and !grade.equals('') ">
    AND grade like '%'||#{grade}||'%'
    </if>   
    <if test="id !=null and !id.equals('')">
    AND user_id like '%'||#{id}||'%'
    </if>    
    AND
    <![CDATA[
    rownum <=#{pageNum}*#{amount}
    ]]>
  )
  WHERE 
  <![CDATA[
  rn > (#{pageNum}-1)*#{amount}
  ]]>
</select>

<select id="getSeachMemberListTotalCount" resultType="int">
  SELECT 
  count(*) 
  FROM 
  member 
  WHERE
  code =#{code} 
  <if test="name != null and !name.equals('')">
    AND user_name like '%'||#{name}||'%'
    </if>        
    <if test="grade !=null and !grade.equals('') ">
    AND grade like '%'||#{grade}||'%'
    </if>   
    <if test="id !=null and !id.equals('')">
    AND user_id like '%'||#{id}||'%'
    </if>
</select>

<select id="getApprovalMemberList" resultType="org.zerock.vo.MemberVO">
  SELECT 
  user_name,grade,rank
  FROM 
  member m
  LEFT JOIN grade g 
  ON m.grade=g.grade_name
  WHERE
  code =#{code} 
  AND 
  <![CDATA[
  rank >
   (SELECT rank
   FROM grade
   WHERE code=#{code}
   AND grade_name=#{grade}
   )
  ]]>
</select>

</mapper>